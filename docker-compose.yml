version: '3.8'

services:
  # NeuroDegenerAI Services
  neuro-api:
    build:
      context: .
      dockerfile: neurodegenerai/Dockerfile
      target: api
    container_name: neuro-api
    ports:
      - "9001:8080"
    environment:
      - ENV=dev
      - LOG_LEVEL=INFO
      - NEURO_DEMO_MODE=true
      - ADNI_DATA_DIR=/app/data
      - NEURO_MODEL_DIR=/app/models
    volumes:
      - ./neurodegenerai/data:/app/data
      - ./neurodegenerai/models:/app/models
      - ./neurodegenerai/reports:/app/reports
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - shared-lib
    networks:
      - neuro-trends-network

  neuro-ui:
    build:
      context: .
      dockerfile: neurodegenerai/Dockerfile
      target: ui
    container_name: neuro-ui
    ports:
      - "8501:8501"
    environment:
      - ENV=dev
      - LOG_LEVEL=INFO
      - NEURO_DEMO_MODE=true
    volumes:
      - ./neurodegenerai/src/app:/app/app
      - ./neurodegenerai/app/assets:/app/assets
    depends_on:
      - neuro-api
      - shared-lib
    networks:
      - neuro-trends-network

  # Trend Detector Services
  trends-api:
    build:
      context: .
      dockerfile: trend-detector/Dockerfile
      target: api
    container_name: trends-api
    ports:
      - "9002:8080"
    environment:
      - ENV=dev
      - LOG_LEVEL=INFO
      - DB_URL=sqlite:///./data/trends.db
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
    volumes:
      - ./trend-detector/data:/app/data
      - ./trend-detector/reports:/app/reports
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - shared-lib
    networks:
      - neuro-trends-network

  trends-ui:
    build:
      context: .
      dockerfile: trend-detector/Dockerfile
      target: ui
    container_name: trends-ui
    ports:
      - "8502:8501"
    environment:
      - ENV=dev
      - LOG_LEVEL=INFO
    volumes:
      - ./trend-detector/src/app:/app/app
      - ./trend-detector/app/assets:/app/assets
    depends_on:
      - trends-api
      - shared-lib
    networks:
      - neuro-trends-network

  # Unified Hub
  hub-ui:
    build:
      context: .
      dockerfile: hub/Dockerfile
    container_name: hub-ui
    ports:
      - "8503:8501"
    environment:
      - ENV=dev
      - LOG_LEVEL=INFO
      - NEURO_API_URL=http://neuro-api:8080
      - TRENDS_API_URL=http://trends-api:8080
    volumes:
      - ./hub_app.py:/app/hub_app.py
      - ./hub/assets:/app/assets
    depends_on:
      - neuro-api
      - trends-api
      - shared-lib
    networks:
      - neuro-trends-network

  # Shared Library (for development)
  shared-lib:
    build:
      context: .
      dockerfile: shared/Dockerfile
    container_name: shared-lib
    volumes:
      - ./shared:/app/shared
    networks:
      - neuro-trends-network

  # Optional: Database for production
  postgres:
    image: postgres:15-alpine
    container_name: trends-postgres
    environment:
      - POSTGRES_DB=trends
      - POSTGRES_USER=trends
      - POSTGRES_PASSWORD=trends123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - neuro-trends-network
    profiles:
      - production

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: trends-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neuro-trends-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  neuro-trends-network:
    driver: bridge
